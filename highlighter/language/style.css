/*
// Languages:
base.*
json
csharp
cpp
c
html
java
javascript
css: todo
*/

/*
// Rule names, +: used in CSS, ?: unused:
+ literal.string (base.string-c, base.string-c, base.apostrophe-string, base.apostrophe-string, css, css, html, javascript, javascript, json, json, pascal, pascal)
+ literal.escape (base.string-c, base.string-c, base.apostrophe.character, base.apostrophe.character, base.apostrophe-string, base.apostrophe-string, javascript, javascript)
+ constant.value.character (base.apostrophe.character, base.apostrophe.character)
+ comment.text (base.comment-c, base.comment-c, base.comment-number-sign, base.comment-number-sign, css, css, pascal, pascal)
+ comment.block (base.comment-block-c, base.comment-block-c, html, html)
+ constant.value.numeric (base.numeric, base.numeric)
+ preprocessor.signature (c, cpp)
+ preprocessor.keyword (c, cpp, csharp)
+ preprocessor.value (c, cpp, csharp)
+ keyword (c, c, cpp, cpp, csharp, csharp, java, java, java, javascript, javascript, javascript, javascript, pascal, pascal)
+ type.keyword (c, c, csharp, csharp, pascal, pascal)
+ name.function (c, c, java, javascript, javascript)
? storage.modifier (c, c)
+ literal.keyword (csharp, csharp, java, java, javascript, pascal, pascal)
? constant.numeric (css)
+ unit (css)
? support.css-property (css, css)
? support.vendor-prefix (css, css)
? support.css-value (css)
? source.php (html, html, html)
? xmltag.php (html, html)
? source.css (html, html, html)
? xmltag.style.open (html, html)
? xmltag.style.close (html, html)
? xmltag.style.tag (html)
? xmltag.script.open (html, html)
? xmltag.script.close (html, html)
? source.javascript (html)
? xmltag.script.tag (html)
? xmltag.open (html)
+ xmltag.close (html)
+ xmltag.all (html, html, html)
? xmltag.special (html)
? xmltag.name (html)
+ xmltag.attribute (html, html)
+ xmltag.operator (html, html)
+ literal.quote (html, html)
? xmltag.value (html)
+ name.namespace (java)
? char (java, java)
? integer (java, java)
+ annotation (java, java)
+ name.class (java, java)
+ operator (java, java, json, json, pascal, pascal)
+ magic.strict (javascript)
+ property (json, json)
+ comment.pascal (pascal, pascal)
+ assignment (pascal, pascal)
+ pascal.part (pascal, pascal)
*/